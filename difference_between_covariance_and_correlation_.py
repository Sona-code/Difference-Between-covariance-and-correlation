# -*- coding: utf-8 -*-
"""Difference Between covariance and correlation .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u2nmYiDJ7R71mtmFt95s1u478N1Okhqf
"""

#import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#craete a dataframe
df = pd.DataFrame()

from re import X
X = pd.Series([12,25,68,42,113])
Y = pd.Series([11,29,58,121,100])

#now convert these to dataFrames
df['x'] = X
df['y'] = Y

df

#As this is numerical- numerical columns we can use scatter plot

fig, (ax1, ax2) = plt.subplots(1,2,figsize=(10,3))

#plot the scatter plots
ax1.scatter(df['x'], df['y'])
ax2.scatter(df['x']*2, df['y']*2)

ax1.set_title('covarience is:'+ str(np.cov(df['x'], df['y'])[0,1]))
ax2.set_title('covarience is:'+ str(np.cov(df['x']*2, df['y']*2)[0,1]))

"""here we could see we are just varying the scale and we are getting more covarience in second graph. So, covarience will be affected by the scales let us see an other example."""

fig, (ax1,ax2,ax3) = plt.subplots(1,3, figsize=(15,3))

ax1.scatter(df['x'], df['x'])
ax2.scatter(df['x'], df['y'])
ax3.scatter(df['x']*2, df['y']*2)

ax1.set_title('covarience is:'+ str(np.cov(df['x'], df['x'])[0,1]))
ax2.set_title('covarience is:'+ str(np.cov(df['x'], df['y'])[0,1]))
ax3.set_title('covarience is:'+ str(np.cov(df['x']*2, df['y']*2)[0,1]))

"""as we all known covarience of x and x should be 1 beacuse, both the dependent. And cavarience of x2 and y2 should be lesser than x and x as tgere is no much covarience b/w those. Hence, to address this issue, we use correlation, Correlation is a standardizing of covarience, but standardizing and correlation are not the sameÂ¶
correlation tells you the strength of the of the relation between two variables, standardization will scale down the two different variables into a single unit

"""

#use of [0,1]
covariance_matrix = np.cov(df['x'], df['y'])
covariance_xy = covariance_matrix
covariance_xy_0_1 = covariance_matrix[0,1]

print("Covariance between x and y:", covariance_xy)
print("Covariance between x and y(0,1):", covariance_xy_0_1)

"""# CORRELATION

"""

fig, ax = plt.subplots(1,2,figsize=(10,3))

#plot the graphs
ax[0].scatter(df['x'], df['x'])
ax[1].scatter(df['x'], df['y'])

ax[0].set_title('correlation is:' + str(df['x'].corr(df['x'])))
ax[1].set_title('correlation is:' + str(df['x'].corr(df['y'])))

fig, ax = plt.subplots(1,3,figsize=(15,3))

#plot the graphs
ax[0].scatter(df['x'], df['x'])
ax[1].scatter(df['x'], df['y'])
ax[2].scatter(df['x']*2, df['y']*2)
ax[0].set_title('correlation is:' + str(df['x'].corr(df['x'])))
ax[1].set_title('correlation is:' + str(df['x'].corr(df['y'])))
ax[2].set_title('correlation is:' + str((df['x']*2).corr((df['y']*2))))

"""##### now, we got a correlation of x and x as 1 which is greater than correlation of x*2 and y*2"""